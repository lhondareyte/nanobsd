#
# This file is part of the spectro-450 Project.
#
# Copyright (c)2016-2020  Luc Hondareyte
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# 2. redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in 
#    the documentation and/or other materials provided with the distribution.   
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE 
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
# OF THE POSSIBILITY OF SUCH DAMAGE.
#

NANO_NAME=NANOBSD
NANO_SRC=/usr/src
NANO_DRIVE=ada0
NANO_KERNEL=NANOBSD
NANO_IMAGES=2
NANO_RDRIVE=$NANO_DRIVE

NANO_PACKAGE_LIST="*.txz"
# modulo 512
NANO_CODESIZE=307200
NANO_DATASIZE=3145728

NANO_BOOTLOADER="boot/btx"

# Disk image 2Go
NANO_MEDIASIZE=4194304
NANO_HEADS=16
NANO_SECTS=63

if [ -f local.conf ] ; then
	. local.conf
fi

CONF_BUILD='
#NO_KLDLOAD=YES
NO_NETGRAPH=YES
NO_PAM=YES
'
CONF_INSTALL='
NO_BLUETOOTH=YES
NO_CVS=YES
NO_FORTRAN=YES
NO_HTML=YES
NO_LPR=YES
MK_MAN=no
NO_SENDMAIL=YES
NO_SHAREDOCS=YES
NO_EXAMPLES=YES
NO_CALENDAR=YES
NO_MISC=YES
NO_SHARE=YES
WITHOUT_INSTALLLIB=YES
WITHOUT_TOOLCHAIN=YES
WITHOUT_DEBUG_FILES=YES
'

#
# See src.conf(5) for details
CONF_WORLD='
MALLOC_PRODUCTION=
WITH_BSD_GREP=
WITHOUT_ACCT=
WITHOUT_AMD=
WITHOUT_ASSERT_DEBUG=
WITHOUT_ATM=
WITHOUT_AUDIT=
WITHOUT_AUTHPF=
WITHOUT_BIND=
WITHOUT_BIND_DNSSEC=
WITHOUT_BIND_ETC=
WITHOUT_BIND_LIBS_LWRES=
WITHOUT_BIND_MTREE=
WITHOUT_BIND_NAMED=
WITHOUT_BIND_UTILS=
WITHOUT_BLACKLIST=
WITHOUT_BLUETOOTH=
WITHOUT_BOOTPD=
WITHOUT_BSDINSTALL=
WITHOUT_BSNMP=
WITHOUT_BZIP2=
WITHOUT_CALENDAR=
WITHOUT_CAPSICUM=
WITHOUT_CDDL=
#WITHOUT_CLANG=
#WITHOUT_CRYPT=
WITHOUT_CTM=
WITHOUT_CUSE=
WITHOUT_CVS=
WITHOUT_DICT=
WITHOUT_DMAGENT=
#WITHOUT_DYNAMICROOT=
WITHOUT_ED_CRYPTO=
WITHOUT_EE=
WITHOUT_EXAMPLES=
WITHOUT_FINGER=
WITHOUT_FMTREE=
WITHOUT_FLOPPY=
#WITHOUT_FORTH=
WITHOUT_FTP=
WITHOUT_FREEBSD_UPDATE=
WITHOUT_GAMES=
WITHOUT_GCOV=
WITHOUT_GDB=
WITHOUT_GNU=
WITHOUT_GPIB=
WITHOUT_GROFF=
WITHOUT_HAST=
WITHOUT_HTML=
WITHOUT_HYPERV=
WITHOUT_INET6=
WITHOUT_INFO=
#WITHOUT_INSTALLLIB=
WITHOUT_IPFILTER=
WITHOUT_IPFW=
WITHOUT_IPX=
WITHOUT_IPX_SUPPORT=
WITHOUT_ISCSI=
WITHOUT_JAIL=
WITHOUT_KERBEROS=
WITHOUT_KERBEROS_SUPPORT=
WITHOUT_KERNEL_SYMBOLS=
WITHOUT_KVM=
WITHOUT_LIB32=
WITHOUT_LOCALES=
WITHOUT_LOCATE=
WITHOUT_LPR=
WITHOUT_MAN=
WITHOUT_MAN_UTILS=
WITHOUT_MAIL=
WITHOUT_NCP=
WITHOUT_NDIS=
WITHOUT_NETCAT=
WITHOUT_NETGRAPH=
WITHOUT_NETGRAPH_SUPPORT=
WITHOUT_NIS=
WITHOUT_NLS=
WITHOUT_NLS_CATALOGS=
WITHOUT_NS_CACHING=
WITHOUT_NTP=
WITHOUT_OFED=
#WITHOUT_OPENSSH=
#WITHOUT_OPENSSL=
WITHOUT_PAM=
WITHOUT_PAM_SUPPORT=
WITHOUT_PF=
WITHOUT_PPP= 
WITHOUT_PORTSNAP=
WITHOUT_QUOTAS=
WITHOUT_RCS=
WITHOUT_RCMDS=
WITHOUT_RESCUE=
WITHOUT_ROUTED=
WITHOUT_SENDMAIL=
WITHOUT_SHAREDOCS=
WITHOUT_SSP=
WITHOUT_SYSINSTALL=
WITHOUT_SVNLITE=
WITHOUT_TALK=
WITHOUT_TCSH=
WITHOUT_TELNET=
WITHOUT_TESTS=
WITHOUT_TEXTPROC=
WITHOUT_TFTP=
WITHOUT_TIMED=
WITHOUT_USB_GADGET_EXAMPLES=
WITHOUT_UTMPX=
WITHOUT_WIRELESS=
WITHOUT_WPA_SUPPLICANT_EAPOL=
WITHOUT_ZFS=
'

cust_system_configuration()
(
	LD_CONF="${NANO_WORLDDIR}/boot/loader.conf"
	#
	# No Beastie at startup
	touch ${LD_CONF}
	echo "beastie_disable=\"YES\"" >> ${LD_CONF}
	echo "loader_color=\"0\"" >> ${LD_CONF}
	# 
	# No memtest at boot
	echo "hw.memtest.tests=0" >> ${LD_CONF}
	#
	# sysctl.conf
	SYSCTL="${NANO_WORLDDIR}/etc/sysctl.conf"
	echo "kern.coredump=0" >> ${SYSCTL}
	#
	# /etc/fstab
	FSTAB="${NANO_WORLDDIR}/etc/fstab"
	printf "/dev/ufs/SpectrOs4\t/Data\tufs\tro\t0 0\n">> ${FSTAB}
	#
	# Mount points
	mkdir -p ${NANO_WORLDDIR}/Library
	mkdir -p ${NANO_WORLDDIR}/Ramdisk
	mkdir -p ${NANO_WORLDDIR}/media/flashdrive
	#
	# Configuration directory
	mkdir -p ${NANO_WORLDDIR}/etc/sysctl.d/
	#
	# /etc/ttys
	TTYS="${NANO_WORLDDIR}/etc/ttys"
	printf "console\tnone\t\t\tunknown\toff secure\n" > ${TTYS}
	printf "ttyv0\t\"/usr/libexec/getty Pc\"\t\txterm\ton  secure\n" >> ${TTYS}
	#
	# Enable firstboot 
	RC_CONF="${NANO_WORLDDIR}/etc/rc.conf"
	echo "firstboot_enable=\"YES\"" >> ${RC_CONF}
	echo "spectro450_enable=\"YES\"" >> ${RC_CONF}
	touch ${NANO_WORLDDIR}/firstboot
	# Disable entropy
	echo "entropy_boot_file=\"NO\"" >> ${RC_CONF}
	# Update nanobsd.conf
	NANOBSDCONF="${NANO_WORLDDIR}/etc/nanobsd.conf"
	touch ${NANOBSDCONF}
	echo "NANO_RDRIVE=\"${NANO_RDRIVE}\"" >> ${NANOBSDCONF}
	echo "NANO_IMAGES=\"${NANO_IMAGES}\"" >> ${NANOBSDCONF}
	if [ $NANO_DATADIR ] ; then
		rm -f ${NANO_WORLDDIR}/${NANO_DATADIR}/*
		mkdir -p ${NANO_WORLDDIR}/${NANO_DATADIR}
		echo "NANO_DATADIR=\"${NANO_DATADIR}\"" >> ${NANOBSDCONF}
	fi
	
)

cust_strip_pkg () {
	strip ${NANO_WORLDDIR}/usr/local/sbin/pkg
	strip ${NANO_WORLDDIR}/usr/local/sbin/pkg-static
	rm -f ${NANO_WORLDDIR}/usr/local/sbin/pkg-static.pkgsave
}

cust_install_keyboard()
(
	RC_CONF="${NANO_WORLDDIR}/etc/rc.conf"
	kmp=/usr/share/syscons/keymaps/
	if [ $NANO_KEYMAP ] ; then
		mkdir -p ${NANO_WORLDDIR}${kmp}
		cp ${kmp}/${NANO_KEYMAP}*  ${NANO_WORLDDIR}${kmp}
		echo "keymap=\"${NANO_KEYMAP}\"" >> ${RC_CONF}
	fi
)

cust_install_termcap()
{
        cp /usr/share/misc/termcap termcap/termcap
        cat termcap/termcap.tinyVT >> termcap/termcap
        cap_mkdb termcap/termcap
	rm -f ${NANO_WORLDDIR}/usr/share/misc/termcap.db
	install -m 444 termcap/termcap.db ${NANO_WORLDDIR}/usr/share/misc/
	rm -f termcap/termcap.db termcap/termcap
}

cust_fetch_packages()
{
	if [ "_${NANO_PACKAGES}" == "_" ] ; then
		return 0
	fi
        mkdir -p ${NANO_PACKAGE_DIR}
	rm -f  ${NANO_PACKAGE_DIR}/*.txz
	rm -f  ${NANO_PACKAGE_DIR}/All/*.txz
        for p in $NANO_PACKAGES ; do
                ASSUME_ALWAYS_YES=YES \
                pkg fetch -o ${NANO_PACKAGE_DIR} $p
        done
	for p in $NANO_PACKAGE_DIR/All/*txz ; do
		cp $p $NANO_PACKAGE_DIR
	done
}

cust_local_packages()
{
	if [ "_${LOCAL_PACKAGES}" == "_" ] ; then
		return 0
	fi
	pkg upgrade -y pkg
	local PKG_CONF="${NANO_WORLDDIR}/usr/local/etc/pkg.conf"
        local PKGCMD="env BATCH=YES ASSUME_ALWAYS_YES=YES PKG_DBDIR=${NANO_PKG_META_BASE}/pkg SIGNATURE_TYPE=none /usr/sbin/pkg"
	if [ -d ../ports ] ; then
		for d in $LOCAL_PACKAGES
		do
			if [ -d ../ports/$d ] ; then
				cd ../ports/$d && make package 
				p=$(basename $(ls work/pkg/*txz))
				cp work/pkg/$p ${NANO_WORLDDIR}/tmp
				chroot -u root -g wheel ${NANO_WORLDDIR} $PKGCMD add /tmp/$p 
				rm -f /tmp/$p
				cd -
			fi
		done
	fi
}

cust_remove_unused()
{
        rm -rf \
	${NANO_WORLDDIR}/usr/include \
        ${NANO_WORLDDIR}/lib/*.a \
        ${NANO_WORLDDIR}/usr/lib/*.a \
        ${NANO_WORLDDIR}/usr/lib/private/*.a \
        ${NANO_WORLDDIR}/usr/lib/aout \
        ${NANO_WORLDDIR}/usr/lib/compat \
        ${NANO_WORLDDIR}/usr/lib/engines/*.a \
        ${NANO_WORLDDIR}/.profile
}

customize_cmd cust_install_files
customize_cmd cust_system_configuration
customize_cmd cust_install_termcap
customize_cmd cust_install_keyboard
customize_cmd cust_fetch_packages
customize_cmd cust_pkgng
customize_cmd cust_local_packages
customize_cmd cust_strip_pkg
customize_cmd cust_remove_unused
