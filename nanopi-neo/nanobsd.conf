#
# Copyright (c)2023  Luc Hondareyte
# All rights reserved.
#
# SPDX-License-Identifier: BSD-2-Clause
#

NANO_SRC=/usr/src
NANO_ARCH=armv7
NANO_MACH=arm
NANO_KERNEL=NANOPINEO
NANO_LAYOUT=std-armv7
NANO_BOOTLOADER="boot/uboot"
NANO_DRIVE=mmcsd0
NANO_NAME=nanopi-neo
NANO_BOOT_PKG=u-boot-nanopi_neo
NANO_PACKAGES="pkg nginx-lite"

NANO_IMAGES=2
NANO_RDRIVE=$NANO_DRIVE

# modulo 512
NANO_CODESIZE=307200
NANO_DATASIZE=3145728

# Disk image 2Go
NANO_MEDIASIZE=4194304
NANO_HEADS=16
NANO_SECTS=63

if [ -f local.conf ] ; then
	. local.conf
fi

CONF_BUILD='
NO_NETGRAPH=YES
NO_PAM=YES
'
CONF_INSTALL='
NO_BLUETOOTH=YES
NO_CVS=YES
NO_FORTRAN=YES
NO_HTML=YES
NO_LPR=YES
MK_BHYVE=no
MK_MAN=no
MK_ICONV=no
MK_ZFS=no
NO_SENDMAIL=YES
NO_SHAREDOCS=YES
NO_EXAMPLES=YES
NO_CALENDAR=YES
NO_MISC=YES
NO_SHARE=YES
WITHOUT_INSTALLLIB=YES
WITHOUT_TOOLCHAIN=YES
WITHOUT_DEBUG_FILES=YES
'

#
# See src.conf(5) for details
CONF_WORLD='
MALLOC_PRODUCTION=
WITH_BSD_GREP=
WITHOUT_ACCT=
WITHOUT_AMD=
WITHOUT_ASSERT_DEBUG=
WITHOUT_ATM=
WITHOUT_AUDIT=
WITHOUT_AUTHPF=
WITHOUT_BIND=
WITHOUT_BIND_DNSSEC=
WITHOUT_BIND_ETC=
WITHOUT_BIND_LIBS_LWRES=
WITHOUT_BIND_MTREE=
WITHOUT_BIND_NAMED=
WITHOUT_BIND_UTILS=
WITHOUT_BLACKLIST=
WITHOUT_BLUETOOTH=
WITHOUT_BOOTPD=
WITHOUT_BSDINSTALL=
WITHOUT_BSNMP=
WITHOUT_BZIP2=
WITHOUT_CALENDAR=
WITHOUT_CAPSICUM=
WITHOUT_CDDL=
#WITHOUT_CLANG=
#WITHOUT_CRYPT=
WITHOUT_CTM=
WITHOUT_CUSE=
WITHOUT_CVS=
WITHOUT_DICT=
WITHOUT_DMAGENT=
#WITHOUT_DYNAMICROOT=
WITHOUT_ED_CRYPTO=
WITHOUT_EE=
WITHOUT_EXAMPLES=
WITHOUT_FINGER=
WITHOUT_FMTREE=
WITHOUT_FLOPPY=
#WITHOUT_FORTH=
WITHOUT_FTP=
WITHOUT_FREEBSD_UPDATE=
WITHOUT_GAMES=
WITHOUT_GCOV=
WITHOUT_GDB=
WITHOUT_GNU=
WITHOUT_GPIB=
WITHOUT_GROFF=
WITHOUT_HAST=
WITHOUT_HTML=
WITHOUT_HYPERV=
WITHOUT_ICONV=
WITHOUT_INFO=
#WITHOUT_INSTALLLIB=
WITHOUT_IPFILTER=
WITHOUT_IPFW=
WITHOUT_IPX=
WITHOUT_IPX_SUPPORT=
WITHOUT_ISCSI=
WITHOUT_JAIL=
WITHOUT_KERBEROS=
WITHOUT_KERBEROS_SUPPORT=
WITHOUT_KERNEL_SYMBOLS=
WITHOUT_KVM=
WITHOUT_LIB32=
WITHOUT_LOADER_UBOOT=
WITHOUT_LOCALES=
WITHOUT_LOCATE=
WITHOUT_LPR=
WITHOUT_MAN=
WITHOUT_MAN_UTILS=
WITHOUT_MAIL=
WITHOUT_NCP=
WITHOUT_NDIS=
WITHOUT_NETCAT=
WITHOUT_NETGRAPH=
WITHOUT_NETGRAPH_SUPPORT=
WITHOUT_NIS=
WITHOUT_NLS=
WITHOUT_NLS_CATALOGS=
WITHOUT_NS_CACHING=
WITHOUT_NTP=
WITHOUT_OFED=
#WITHOUT_OPENSSH=
#WITHOUT_OPENSSL=
WITHOUT_PAM=
WITHOUT_PAM_SUPPORT=
WITHOUT_PF=
WITHOUT_PPP= 
WITHOUT_PORTSNAP=
WITHOUT_QUOTAS=
WITHOUT_RCS=
WITHOUT_RCMDS=
WITHOUT_RESCUE=
WITHOUT_ROUTED=
WITHOUT_SENDMAIL=
WITHOUT_SHAREDOCS=
WITHOUT_SSP=
WITHOUT_SYSINSTALL=
WITHOUT_SVNLITE=
WITHOUT_TALK=
WITHOUT_TCSH=
WITHOUT_TELNET=
WITHOUT_TESTS=
WITHOUT_TEXTPROC=
WITHOUT_TFTP=
WITHOUT_TIMED=
WITHOUT_USB_GADGET_EXAMPLES=
WITHOUT_UTMPX=
WITHOUT_WIRELESS=
WITHOUT_WPA_SUPPLICANT_EAPOL=
WITHOUT_ZFS=
'

cust_remove_unused()
{
        rm -rf \
	${NANO_WORLDDIR}/lib/*.a \
	${NANO_WORLDDIR}/usr/include \
	${NANO_WORLDDIR}/usr/lib/*.a \
	${NANO_WORLDDIR}/usr/lib/aout \
	${NANO_WORLDDIR}/usr/lib/compat \
	${NANO_WORLDDIR}/usr/lib/engines/*.a \
	${NANO_WORLDDIR}/usr/lib/private/*.a \
	${NANO_WORLDDIR}/.profile
}

cust_install_packages() {
	if [ -z ${NANO_PACKAGES} ] ; then
		return
	fi
	cp /etc/resolv.conf ${NANO_WORLDDIR}/etc
	for p in ${NANO_PACKAGES}
	do
		pkg --chroot ${NANO_WORLDDIR} install -y $p
	done
	rm -f ${NANO_WORLDDIR}/pkg/db/repo-FreeBSD* \
		${NANO_WORLDDIR}/etc/resolv.conf
}

cust_finalize() {

	cat << !EOF! >> ${NANO_WORLDDIR}/etc/rc.d/finalize
#!/bin/sh
#
# PROVIDE: finalize
# REQUIRE: LOGIN
# KEYWORD: firstboot

. /etc/rc.subr

name="finalize"
desc="Finalize NanoBSD configuration"
start_cmd="app_start"
stop_cmd="app_stop"
rcvar="\${name}_enable"

PATH=\$PATH:/sbin:/usr/sbin
app_start () {
        [ ! -f /firstboot ] && return
        sleep 2
        printf "$desc ..."
        sysrc -x growfs_enable
        sysrc -x finalize_enable
        /etc/rc.d/hostid start
        mount /cfg
        if [ $? -eq 0 ] ; then
                # save rc.conf
                cp /etc/rc.conf /cfg 
                # Avoid hostid generation at each boot
                cp /etc/hostid /cfg
        fi
        umount /cfg
        mount -o rw /
        rm -f /firstboot /conf/base/etc/rc.d/finalize

        # Fix bug 228826
        # https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=228826
        kldxref -R /boot > /dev/null 2>&1
        mount -o ro /
        echo "done."
        reboot
}

app_stop() {
        :
}

load_rc_config \$name
run_rc_command "\$1"
!EOF!
	chmod 755 ${NANO_WORLDDIR}/etc/rc.d/finalize
	echo "finalize_enable=\"YES\"" >> ${NANO_WORLDDIR}/etc/rc.conf 
}

cust_efi_loader() {
        mkdir -p ${NANO_FAT_DIR}/EFI/BOOT
        mkdir -p ${NANO_FAT_DIR}/EFI/FREEBSD
        LOADER_ENV=${NANO_FAT_DIR}/EFI/FREEBSD/loader.env
        echo "rootdev=disk0${NANO_SLICE_ROOT}a" >> ${LOADER_ENV}
        cp ${NANO_WORLDDIR}/boot/loader_lua.efi ${NANO_FAT_DIR}/EFI/BOOT/bootarm.efi
}

cust_system_configuration()
(
	LD_CONF="${NANO_WORLDDIR}/boot/loader.conf"
	#
	# No Beastie at startup
	touch ${LD_CONF}
	echo "beastie_disable=\"YES\"" >> ${LD_CONF}
	echo "loader_color=\"0\"" >> ${LD_CONF}
	echo "loader_delay=\"1\"" >> ${LD_CONF}
	echo "autoboot_delay=\"1\"" >> ${LD_CONF}
	#
	# sysctl.conf
	SYSCTL="${NANO_WORLDDIR}/etc/sysctl.conf"
	echo "kern.coredump=0" >> ${SYSCTL}
	#
	# Disable entropy
	RC_CONF="${NANO_WORLDDIR}/etc/rc.conf"
	echo "entropy_boot_file=\"NO\"" >> ${RC_CONF}
	#
	# Enable Nginx on startup
	echo "nginx_enable=\"YES\"" >> ${RC_CONF}
	
)

. /usr/src/tools/tools/nanobsd/embedded/common

customize_cmd cust_install_files
customize_cmd cust_efi_loader
customize_cmd cust_finalize
customize_cmd cust_install_packages
customize_cmd cust_remove_unused
customize_cmd cust_system_configuration
